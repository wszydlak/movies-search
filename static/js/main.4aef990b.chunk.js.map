{"version":3,"sources":["components/Movies/movies.module.scss","components/Header/header.module.scss","components/ProgressiveImage/progressive-image.module.scss","store/actions/movies.ts","store/utils/createReducer.ts","store/reducers/movies.ts","store/reducers/index.ts","store/services/api.ts","store/sagas/movies.ts","store/sagas/index.ts","store/index.ts","assets/logo.png","components/Header/Header.tsx","components/Header/index.tsx","store/selectors/movies.ts","assets/no-image.png","components/ProgressiveImage/ProgressiveImage.tsx","components/Movies/Movie.tsx","components/Movies/Movies.tsx","components/Movies/index.tsx","components/Spinner/Spinner.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["module","exports","MOVIES_FETCH","MOVIES_RECEIVED","searchMovies","search","type","phrase","year","receiveMovies","movies","createReducer","initialState","handlers","state","action","Object","prototype","hasOwnProperty","call","queryParams","queryStringParse","window","location","isLoading","undefined","page","pages","total","length","combineReducers","Helper","mapResults","results","total_results","total_pages","map","mapResult","id","overview","poster_path","release_date","title","vote_average","date","image","small","medium","large","vote","prepareUrl","params","query","API","fetch","response","json","data","callMovies","fetchMovies","fetchMoviesWatcher","searchMoviesWatcher","put","select","takeLatest","debounce","root","all","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","reduxSaga","store","createStore","rootReducer","applyMiddleware","run","rootSaga","currentYear","Date","getFullYear","years","Array","from","e","idx","reverse","Header","onSearch","initialYear","useState","setSearch","setYear","useEffect","className","styles","alt","src","logo","onSubmit","preventDefault","autoFocus","value","placeholder","onChange","target","React","memo","HeaderContainer","withRouter","history","useSelector","dispatch","useDispatch","useCallback","searchMoviesAction","push","ProgressiveImage","preview","props","isLoaded","setIsLoaded","Image","onload","currentValue","cx","style","Movie","noImage","onError","MoviesComponent","movie","MoviesContainer","Movies","Spinner","show","Main","hasMore","removeListener","callback","removeEventListener","documentElement","document","innerHeight","scrollTop","offsetHeight","addEventListener","path","component","App","basename","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4aef990b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"movies_list__i04n0\",\"no-results\":\"movies_no-results__3WBe2\",\"element\":\"movies_element__FOPWu\",\"element_hidden\":\"movies_element_hidden__14YJv\",\"element__link\":\"movies_element__link__3p-50\",\"element__image\":\"movies_element__image__22ofU\",\"element__vote-wrapper\":\"movies_element__vote-wrapper__1bvED\",\"element__vote\":\"movies_element__vote__1rbbf\",\"element__title\":\"movies_element__title__3l4GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3fn4i\",\"logo\":\"header_logo__14tHM\",\"logo__image\":\"header_logo__image__cVPkB\",\"form\":\"header_form__3Ry9u\",\"form__input\":\"header_form__input__WncE_\",\"form__select\":\"header_form__select__1eZjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"progressive-image_image__Ar7dz\",\"image_progress\":\"progressive-image_image_progress__9vKrS\"};","import { Action } from 'redux';\n\nexport const MOVIES_FETCH = 'MOVIES_FETCH';\nexport const MOVIES_RECEIVED = 'MOVIES_RECEIVED';\nexport const MOVIES_SEARCH = 'MOVIES_SEARCH';\nexport const MOVIES_RESET = 'MOVIES_RESET';\n\nexport interface MoviesReceivedAction extends Action {\n  readonly type: typeof MOVIES_RECEIVED;\n  readonly search: Search;\n  readonly movies: Movies;\n}\n\nexport interface GetMoviesAction extends Action {\n  readonly type: typeof MOVIES_FETCH;\n}\n\nexport interface SearchMoviesAction extends Action {\n  readonly type: typeof MOVIES_SEARCH;\n  readonly phrase: Search['phrase'];\n  readonly year?: Search['year'];\n}\n\nexport interface ResetMoviesAction extends Action {\n  readonly type: typeof MOVIES_RESET;\n}\n\nexport const getMovies = (): GetMoviesAction => ({\n  type: MOVIES_FETCH\n});\n\nexport const searchMovies = (search: Search): SearchMoviesAction => ({\n  type: 'MOVIES_SEARCH',\n  phrase: search.phrase,\n  year: search.year\n});\n\nexport const receiveMovies = (\n  movies: Movies,\n  search: Search\n): MoviesReceivedAction => ({\n  type: MOVIES_RECEIVED,\n  search,\n  movies\n});\n\nexport const resetMovies = (): ResetMoviesAction => ({\n  type: 'MOVIES_RESET'\n});\n","import { Action, Reducer } from 'redux';\n\ntype Handlers<S> = {\n  [key: string]: (state: S, action: any) => S;\n};\n\nconst createReducer =\n  <S>(initialState: S, handlers: Handlers<S>): Reducer<S> =>\n  <A extends Action>(state: S = initialState, action: A) =>\n    Object.prototype.hasOwnProperty.call(handlers, action.type)\n      ? handlers[action.type](state, action)\n      : state;\n\nexport default createReducer;\n","import { parse as queryStringParse } from 'query-string';\n\nimport {\n  MOVIES_FETCH,\n  MOVIES_RECEIVED,\n  MOVIES_RESET,\n  MoviesReceivedAction\n} from '../actions';\nimport createReducer from '../utils/createReducer';\n\nconst queryParams: Partial<Search> = queryStringParse(window.location.search);\nconst phrase = queryParams.phrase || undefined;\nconst year = queryParams.year || undefined;\n\nconst initialState: MoviesState = {\n  isLoading: false,\n  phrase,\n  year,\n  movies: [],\n  page: 0,\n  pages: 0,\n  total: 0\n};\n\nexport default createReducer(initialState, {\n  [MOVIES_FETCH]: state => {\n    const { movies, total } = state;\n    if (movies.length < total) {\n      return {\n        ...state,\n        isLoading: true\n      };\n    }\n    return state;\n  },\n\n  [MOVIES_RESET]: () => ({\n    ...initialState,\n    phrase: undefined,\n    year: undefined\n  }),\n  [MOVIES_RECEIVED]: (\n    state,\n    {\n      movies: { page, pages, total, movies },\n      search: { phrase, year }\n    }: MoviesReceivedAction\n  ) => ({\n    ...state,\n    phrase,\n    year,\n    page,\n    pages,\n    total,\n    movies: page === 1 ? [...movies] : [...state.movies, ...movies],\n    isLoading: false\n  })\n});\n","import { combineReducers } from 'redux';\n\nimport movies from './movies';\n\nexport default combineReducers({\n  movies\n});\n","type Params = {\n  page: number;\n  query: Search['phrase'];\n  year?: Search['year'];\n};\n\nconst Helper = {\n  mapResults({ results, total_results, page, total_pages }: ApiMovies): Movies {\n    return {\n      page,\n      pages: total_pages,\n      total: total_results,\n      movies: results.map(Helper.mapResult)\n    };\n  },\n  mapResult({\n    id,\n    overview,\n    poster_path,\n    release_date,\n    title,\n    vote_average\n  }: ApiMovie): Movie {\n    return {\n      id,\n      date: release_date,\n      image: poster_path\n        ? {\n            small: `https://image.tmdb.org/t/p/w92${poster_path}`,\n            medium: `https://image.tmdb.org/t/p/w300${poster_path}`,\n            large: `https://image.tmdb.org/t/p/w780${poster_path}`\n          }\n        : undefined,\n      title,\n      overview,\n      vote: vote_average\n    };\n  },\n  prepareUrl(params: Params): string {\n    const basePath = 'https://api.themoviedb.org/3';\n\n    let queryParams = `api_key=03c93abb1975c0c02a167e1b3e8b63d4&page=${\n      params.page\n    }&query=${params.query}`;\n    if (params.year) {\n      queryParams = `${queryParams}&year=${params.year}`;\n    }\n\n    return `${basePath}/search/movie?${queryParams}`;\n  }\n};\n\nexport const API = {\n  async getMovies(\n    page: number,\n    { phrase: query, year }: Search\n  ): Promise<Movies> {\n    const response: Response = await fetch(\n      Helper.prepareUrl({ page, query, year })\n    );\n    const data: ApiMovies = await response.json();\n\n    return Helper.mapResults(data);\n  }\n};\n","import { call, debounce, put, select, takeLatest } from 'redux-saga/effects';\n\nimport {\n  MOVIES_FETCH,\n  MOVIES_SEARCH,\n  MoviesReceivedAction,\n  receiveMovies,\n  resetMovies,\n  SearchMoviesAction\n} from '../actions';\nimport { API } from '../services/api';\n\nfunction* callMovies(page: Movies['page'], search: Search) {\n  const movies: Movies = yield call(API.getMovies, page, search);\n  yield put<MoviesReceivedAction>(receiveMovies(movies, search));\n}\n\nfunction* fetchMovies() {\n  const { phrase, year }: Search = yield select((state: State) => {\n    const { phrase, year } = state.movies;\n    return { phrase, year };\n  });\n\n  if (!phrase) {\n    yield put(resetMovies());\n  } else {\n    const canFetchMore = yield select((state: State) => {\n      const { total, movies } = state.movies;\n      return movies.length < total;\n    });\n    if (canFetchMore) {\n      const page: Movies['page'] = yield select(\n        (state: State) => state.movies.page\n      );\n      yield call(callMovies, page + 1, { phrase, year });\n    }\n  }\n}\n\nfunction* searchMovies(action: SearchMoviesAction) {\n  const { phrase, year } = action;\n  if (!phrase) {\n    yield put(resetMovies());\n  } else {\n    yield call(callMovies, 1, { phrase, year });\n  }\n}\n\nexport function* fetchMoviesWatcher() {\n  yield takeLatest(MOVIES_FETCH, fetchMovies);\n}\n\nexport function* searchMoviesWatcher() {\n  yield debounce(500, MOVIES_SEARCH, searchMovies);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { fetchMoviesWatcher, searchMoviesWatcher } from './movies';\n\nexport default function* root() {\n  yield all([fetchMoviesWatcher(), searchMoviesWatcher()]);\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport reduxSaga from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst composeEnhancer =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = reduxSaga();\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo.58c03d10.png\";","import React, { useEffect, useState } from 'react';\n\nimport logo from '../../assets/logo.png';\nimport styles from './header.module.scss';\n\nconst currentYear = new Date().getFullYear();\nconst startYear = 1950;\nconst years = Array.from(\n  { length: currentYear - startYear + 1 },\n  (e, idx) => startYear + idx\n).reverse();\n\ntype HeaderProps = {\n  onSearch: (value: Search['phrase'], year?: Search['year']) => void;\n  phrase?: Search['phrase'];\n  year?: Search['year'];\n};\n\nconst Header: React.FC<HeaderProps> = ({\n  onSearch,\n  phrase,\n  year: initialYear\n}) => {\n  const [search, setSearch] = useState(phrase);\n  const [year, setYear] = useState(initialYear);\n  useEffect(() => {\n    if (search !== undefined) {\n      onSearch(search, year || undefined);\n    }\n  }, [onSearch, search, year]);\n\n  return (\n    <header className={styles['header']}>\n      <div className={styles['logo']}>\n        <img className={styles['logo__image']} alt=\"Logo\" src={logo} />\n        Movies Search\n      </div>\n      <form onSubmit={e => e.preventDefault()} className={styles['form']}>\n        <input\n          className={styles['form__input']}\n          autoFocus={true}\n          value={search}\n          placeholder=\"Search\"\n          onChange={e => setSearch(e.target.value)}\n        />\n        {!!search && (\n          <select\n            value={year}\n            onChange={e => setYear(e.target.value)}\n            className={styles['form__select']}\n            placeholder=\"Select year\"\n          >\n            <option value=\"\">Select Year</option>\n            {years.map(year => (\n              <option key={`search-year-option-${year}`} value={year}>\n                {year}\n              </option>\n            ))}\n            <option />\n          </select>\n        )}\n      </form>\n    </header>\n  );\n};\n\nexport default React.memo(Header);\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { searchMovies as searchMoviesAction } from '../../store/actions';\nimport { selectPhrase, selectYear } from '../../store/selectors';\nimport Header from './Header';\n\nconst HeaderContainer = withRouter(({ history }) => {\n  const phrase = useSelector(selectPhrase());\n  const year = useSelector(selectYear());\n  const dispatch = useDispatch();\n  const onSearch = useCallback(\n    (phrase: Search['phrase'], year?: Search['year']) => {\n      dispatch(searchMoviesAction({ phrase, year }));\n      if (phrase) {\n        history.push(`/search?phrase=${phrase}${year ? `&year=${year}` : ''}`);\n      } else {\n        history.push('/');\n      }\n    },\n    [dispatch, history]\n  );\n\n  return <Header year={year} phrase={phrase} onSearch={onSearch} />;\n});\n\nexport default React.memo(HeaderContainer);\n","export const selectIsLoading = () => (state: State) => state.movies.isLoading;\n\nexport const selectMoviesData = () => (state: State) => state.movies;\n\nexport const selectPhrase = () => (state: State) => state.movies.phrase;\n\nexport const selectYear = () => (state: State) => state.movies.year;\n\nexport const selectHasMore = () => (state: State) => {\n  const { total, movies } = state.movies;\n  return movies.length < total;\n};\n","export default __webpack_public_path__ + \"static/media/no-image.7ecc4230.png\";","import cx from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nimport style from './progressive-image.module.scss';\n\ntype ProgressiveImageProps = {\n  preview: string;\n  src: string;\n} & JSX.IntrinsicElements['img'];\n\nconst ProgressiveImage: React.FC<ProgressiveImageProps> = ({\n  src,\n  preview,\n  className,\n  alt,\n  ...props\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const image = new Image();\n  image.onload = () =>\n    setIsLoaded(currentValue => (currentValue === false ? true : currentValue));\n  image.src = src;\n\n  useEffect(() => {\n    setIsLoaded(currentValue => (currentValue === true ? false : currentValue));\n  }, [src]);\n\n  return (\n    <img\n      src={isLoaded ? src : preview}\n      className={cx(className, style['image'], {\n        [style['image_progress']]: !isLoaded\n      })}\n      alt={alt}\n      {...props}\n    />\n  );\n};\n\nexport default React.memo<ProgressiveImageProps>(ProgressiveImage);\n","import React from 'react';\n\nimport noImage from '../../assets/no-image.png';\nimport ProgressiveImage from '../ProgressiveImage';\nimport styles from './movies.module.scss';\n\ntype MovieProps = Pick<Movie, 'id' | 'title' | 'image' | 'vote'>;\n\nconst Movie: React.FC<MovieProps> = ({ id, title, image, vote }) => {\n  return (\n    <li className={styles['element']}>\n      <div className={styles['element__link']}>\n        <ProgressiveImage\n          className={styles['element__image']}\n          alt={title}\n          preview={image ? image.small : noImage}\n          src={image ? image.medium : noImage}\n          onError={e => {\n            (e.target as HTMLImageElement).src = noImage;\n          }}\n        />\n        <span className={styles['element__vote-wrapper']}>\n          <span className={styles['element__vote']}>{vote}</span>\n        </span>\n        <span className={styles['element__title']}>{title}</span>\n      </div>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoading } from '../../store/selectors';\nimport Movie from './Movie';\nimport styles from './movies.module.scss';\n\ntype MoviesProps = Pick<Movies, 'movies'>;\n\nconst MoviesComponent: React.FC<MoviesProps> = ({ movies }) => {\n  const isLoading = useSelector(selectIsLoading());\n\n  if (movies.length) {\n    return (\n      <ul className={styles['list']}>\n        {movies.map(movie => (\n          <Movie key={movie.id} {...movie} />\n        ))}\n      </ul>\n    );\n  }\n  return isLoading ? null : (\n    <div className={styles['no-results']}>No movies found</div>\n  );\n};\n\nexport default React.memo(MoviesComponent);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\n\nimport { searchMovies as searchMoviesAction } from '../../store/actions';\nimport { selectMoviesData } from '../../store/selectors';\nimport Movies from './Movies';\n\nconst MoviesContainer: React.FC<RouteComponentProps> = ({ location }) => {\n  const { movies, page, phrase, year } = useSelector(selectMoviesData());\n  const dispatch = useDispatch();\n  if (page === 0 && phrase) {\n    dispatch(searchMoviesAction({ phrase, year }));\n  }\n  return <Movies movies={movies} />;\n};\n\nexport default React.memo(MoviesContainer);\n","import React from 'react';\n\ntype SpinnerProps = {\n  show: boolean;\n};\n\nconst Spinner: React.FC<SpinnerProps> = ({ show }) => {\n  return !show ? null : (\n    <div className=\"spinner\">\n      <span className=\"spinner__line1\" />\n      <span className=\"spinner__line2\" />\n      <span className=\"spinner__line3\" />\n      <span className=\"spinner__line4\" />\n      <span className=\"spinner__line5\" />\n    </div>\n  );\n};\n\nexport default React.memo(Spinner);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route } from 'react-router';\n\nimport { getMovies as getMoviesAction } from '../../store/actions';\nimport { selectHasMore, selectIsLoading } from '../../store/selectors';\nimport Movies from '../Movies';\nimport Spinner from '../Spinner';\n\nconst Main: React.FC = () => {\n  const isLoading = useSelector(selectIsLoading());\n  const hasMore = useSelector(selectHasMore());\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoading) {\n      const removeListener = (callback: EventListener) => {\n        window.removeEventListener('scroll', callback);\n      };\n      const callback = () => {\n        const { documentElement } = document;\n        const top = window.innerHeight + documentElement.scrollTop;\n        const full = documentElement.offsetHeight;\n\n        if (top >= full - 50) {\n          dispatch(getMoviesAction());\n          if (hasMore) {\n            removeListener(callback);\n          }\n        }\n      };\n\n      window.addEventListener('scroll', callback);\n      return () => {\n        removeListener(callback);\n      };\n    }\n  }, [dispatch, hasMore, isLoading]);\n  return (\n    <section>\n      <Route path=\"/search\" component={Movies} />\n      <Spinner show={isLoading} />\n    </section>\n  );\n};\n\nexport default React.memo(Main);\n","import store from './store';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Main />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}